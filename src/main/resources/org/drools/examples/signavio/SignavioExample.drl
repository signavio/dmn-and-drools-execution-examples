package org.drools.examples.signavio

import java.time.OffsetTime
import java.util.Arrays
import org.slf4j.Logger
import java.text.DecimalFormat
import org.slf4j.LoggerFactory
import com.signavio.dmn.formulae.v3.IndexedListElement
import java.util.ArrayList
import java.util.HashSet
import java.math.BigDecimal
import java.util.List
import java.time.OffsetDateTime
import com.signavio.dmn.formulae.v3.DmnHierarchyFormulae
import java.time.LocalDate
import com.signavio.dmn.formulae.v3.DmnFormulae
import java.util.Collections
import java.math.RoundingMode

global String modelId
global Integer revisionNumber
global List $allMessages
global Logger $logger

declare  DmnFormulae
end

declare  DmnFormulaeLocal  extends  DmnFormulae
end

declare  DmnHierarchyFormulae
end

declare  IndexedListElement
end

declare  Input
    age : BigDecimal
end

declare  FullAge  extends  IndexedListElement
    fullAge : Boolean
end

declare  FullAge_Output
    fullAge : Boolean
end

rule "initialize_version_info"
    no-loop true
    salience 1000
when
then
	drools.getWorkingMemory().setGlobal("modelId", "b32d2b8df93c422fbefff6d41d7a1983");
	drools.getWorkingMemory().setGlobal("revisionNumber", 4);
end

rule "initialize_annotations_list"
    no-loop true
    salience 1000
when
then
	drools.getWorkingMemory().setGlobal("$allMessages", new ArrayList<>());
end

rule "add_formulae_to_memory"
    no-loop true
    salience 1000
when
then
	insert(new DmnFormulaeLocal());
	insert(new DmnHierarchyFormulae());
end

rule "init_logger"
    no-loop true
    salience 1000
when
then
	drools.getWorkingMemory().setGlobal("$logger", LoggerFactory.getLogger(SignavioExample.class));
end

rule "log_input_rule"
    no-loop true
    salience 999
when
    $input : Input(  )
then
    System.out.println($input.toString());
	$logger.info($input.toString());
end

rule "fullAge_rule_1"
    no-loop true
    //decision:  fullAge
    salience 1
when
    $F : DmnFormulaeLocal(  )
    $H : DmnHierarchyFormulae(  )
    not(
    FullAge_Output(  )   )
    not(
    FullAge(  )   )
    $input : Input(  )
    eval( $F.nullSafeEval(($F.lessThan($input.getAge(), BigDecimal.valueOf(18.0)))) )
then
	FullAge $fullAge = new FullAge();
	$fullAge.setFullAge(false);
	$fullAge.setIndex(0);
	insert($fullAge);
	$logger.info("Rule fullAge_rule1 fired:");
	$logger.info("	Inputs: " + $input.getAge());
	$logger.info("	Outputs: " + $fullAge.getFullAge());
end

rule "fullAge_rule_2"
    no-loop true
    //decision:  fullAge
    salience 1
when
    $F : DmnFormulaeLocal(  )
    $H : DmnHierarchyFormulae(  )
    not(
    FullAge_Output(  )   )
    not(
    FullAge(  )   )
    $input : Input(  )
    eval( $F.nullSafeEval(($F.greaterThanOrEqualTo($input.getAge(), BigDecimal.valueOf(18.0)))) )
then
	FullAge $fullAge = new FullAge();
	$fullAge.setFullAge(true);
	$fullAge.setIndex(1);
	insert($fullAge);
	$logger.info("Rule fullAge_rule2 fired:");
	$logger.info("	Inputs: " + $input.getAge());
	$logger.info("	Outputs: " + $fullAge.getFullAge());
end

rule "fullAge_singleResultOutput"
    no-loop true
    //decision:  fullAge
    salience 0
when
    $F : DmnFormulaeLocal(  )
    $H : DmnHierarchyFormulae(  )
    not(
    FullAge_Output(  )   )
    $input : Input(  )
    $fullAge : FullAge(  )
then
	FullAge_Output $fullAge_Output = new FullAge_Output();
	$fullAge_Output.setFullAge($fullAge.getFullAge());
	retract($fullAge);
	insert($fullAge_Output);
	$logger.info("Single result output rule fired for decision 'fullAge'[sid-AD9D4DA4-0A50-42D2-9AF8-05221A96D330]:");
	$logger.info("	Inputs: " + $input.getAge());
	$logger.info("	Outputs: " + $fullAge_Output.toString());
end

rule "fullAge_emptyResultFallBack"
    no-loop true
    //decision:  fullAge
    salience -1
when
    $F : DmnFormulaeLocal(  )
    $H : DmnHierarchyFormulae(  )
    not(
    FullAge_Output(  )   )
    $input : Input(  )
then
	FullAge_Output $fullAge_Output = new FullAge_Output();
	$fullAge_Output.setFullAge(null);
	insert($fullAge_Output);
	$logger.info("Fallback rule fired for decision 'fullAge'[sid-AD9D4DA4-0A50-42D2-9AF8-05221A96D330]:");
	$logger.info("	Inputs: " + $input.getAge());
	$logger.info("	Outputs: " + $fullAge_Output.toString());
end

rule "fullAge_cleanup_rule_output"
    no-loop true
    //decision:  fullAge
    salience 2
when
    $F : DmnFormulaeLocal(  )
    $H : DmnHierarchyFormulae(  )
    FullAge_Output(  )
    $fullAge : FullAge(  )
then
	retract($fullAge);
	$logger.info("Clean up rule output for decision 'fullAge'[sid-AD9D4DA4-0A50-42D2-9AF8-05221A96D330]:");
end
